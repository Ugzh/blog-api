services:

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    ports:
      - "27017:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_CONFIG_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_CONFIG_PASSWORD}
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
    depends_on:
      mongo:
        condition: service_healthy

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: blog-api
    environment:
      - PORT=3000
    ports:
      - '3000:3000'
    depends_on:
      mongo:
        condition: service_healthy
    volumes:
      - ./src:/app/src


  minio:
    image: minio/minio
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}

    volumes:
      - 'minio_data:/data'
    command: server /data --console-address ":9001"
    healthcheck:
      test: [ "CMD", "curl","-f","http://minio:9000/minio/health/live" ]
      retries: 3
      timeout: 5s


  nginx:
    image: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - minio

  mailhog:
    image: mailhog/mailhog
    ports:
      - '1025:1025'
      - '8025:8025'


volumes:
  minio_data:
    driver: local

